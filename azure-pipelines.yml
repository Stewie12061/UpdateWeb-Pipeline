# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

resources:
  - repo: self

pool:
  name: Update source WEB

jobs:
- job: UpdateWeb
  displayName: 'Update web publish folder'
  steps:
    - task: Ansible@0
      inputs:
        ansibleInterface: 'agentMachine'
        playbookPathOnAgentMachine: 'D:\Ansible\update_publish.yml'
        inventoriesAgentMachine: 'file'
        inventoryFileOnAgentMachine: 'D:\Ansible\hosts.ini'
    # - task: WindowsMachineFileCopy@2
    #   displayName: "Copy Publish zip from local to Server"
    #   inputs:
    #     SourcePath: 'D:\UpdateSourceWeb'
    #     MachineNames: '116.118.95.121'
    #     AdminUserName: 'web-server\stewie12061'
    #     AdminPassword: 'As@19006123'
    #     TargetPath: 'C:\'
    #     AdditionalArguments: '/XD .git /XF README.md'
    
    # - task: PowerShellOnTargetMachines@3
    #   displayName: "Unzip Publish folder "
    #   inputs:
    #     Machines: '116.118.95.121:5986'
    #     UserName: 'web-server\stewie12061'
    #     UserPassword: 'As@19006123'
    #     InlineScript: 'Expand-Archive -LiteralPath ''C:\00.PUBLISH.zip'' -DestinationPath C:\Publish0 -Force'
    #     NewPsSessionOptionArguments: '-SkipCACheck -SkipCNCheck -SkipRevocationCheck'
    #     ignoreLASTEXITCODE: true
    # - task: PowerShellOnTargetMachines@3
    #   displayName: "Sync all publish folder"
    #   inputs:
    #     Machines: '116.118.95.121:5986'
    #     UserName: 'web-server\stewie12061'
    #     UserPassword: 'As@19006123'
    #     InlineScript: |
    #       $subfolders = Get-ChildItem -Path C:\Web -Directory
    #       $folderNames = $subfolders | ForEach-Object { $_.Name }
          
    #       Write-Output "$folderNames"
              
    #       foreach ($folder in $folderNames) {
    #         robocopy "C:\Publish0" "C:\Web\$folder" /E /XD "Attached Logs" /XF "web.config" /MT:4 /NP /NDL /NFL /NC /NS
    #       }
    #     NewPsSessionOptionArguments: '-SkipCACheck -SkipCNCheck -SkipRevocationCheck'
    #     ignoreLASTEXITCODE: true
    #     RunPowershellInParallel: false
